name: Android CI

on:
  push:
    branches: [ master ]
    paths-ignore: [ "*.md" ]
  pull_request:

jobs:
  validation:
    name: "Gradle wrapper Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

  build:
    needs: validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permissions
        run: chmod +x gradlew

      - name: Provide Firebase config to app module
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > ./app/google-services.json

      - name: Provide Firebase config to online module
        run: echo $FIREBASE_CONFIG > ./online/google-services.json

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew buildDebug

  unit-test:
    needs: validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permissions
        run: chmod +x gradlew

      - name: Provide Firebase config to app module
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > ./app/google-services.json

      - name: Provide Firebase config to online module
        run: echo $FIREBASE_CONFIG > ./online/google-services.json

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Unit tests
        run: ./gradlew testDebug

      - name: Output test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit test results
          path: "**/build/reports/tests/testDebugUnitTest/"

  instrumented-test:
    needs: validation
    runs-on: macos-latest
    timeout-minutes: 60
    strategy:
      matrix:
        api_level: [ 21, 27, 30 ]
        target: [ default, google_apis ]
        exclude:
          # Excluding as 30-default is not supported by emulator yet
          - api_level: 30
            target: default

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Grant execute permissions
        run: chmod +x gradlew

      - name: Provide Firebase config to app module
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > ./app/google-services.json

      - name: Provide Firebase config to online module
        run: echo $FIREBASE_CONFIG > ./online/google-services.json

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api_level }}
          target: ${{ matrix.target }}
          script: ./gradlew core:connectedDebugAndroidTest app:connectedDebugAndroidTest

      - name: Output test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Instrumented test results (${{ matrix.api_level }}-${{ matrix.target }})
          path: "**/build/reports/androidTests/connected/flavors/debugAndroidTest"
